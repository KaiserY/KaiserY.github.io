<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KaiserY Hub</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kaisery.github.io/"/>
  <updated>2016-04-05T14:53:25.186Z</updated>
  <id>http://kaisery.github.io/</id>
  
  <author>
    <name>KaiserY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Atom 下配置 Python 开发环境</title>
    <link href="http://kaisery.github.io/2016/04/05/Atom%20%E4%B8%8B%E9%85%8D%E7%BD%AE%20Python%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://kaisery.github.io/2016/04/05/Atom 下配置 Python 开发环境/</id>
    <published>2016-04-05T22:14:34.000Z</published>
    <updated>2016-04-05T14:53:25.186Z</updated>
    
    <content type="html">&lt;h2 id=&quot;自动补全&quot;&gt;&lt;a href=&quot;#自动补全&quot; class=&quot;headerlink&quot; title=&quot;自动补全&quot;&gt;&lt;/a&gt;自动补全&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sadovnychyi/autocomplete-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;autocomplete-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apm install autocomplete-python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;代码美化&quot;&gt;&lt;a href=&quot;#代码美化&quot; class=&quot;headerlink&quot; title=&quot;代码美化&quot;&gt;&lt;/a&gt;代码美化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Glavin001/atom-beautify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;apm install atom-beautify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apm install atom-beautify&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外你需要安装一个&lt;code&gt;Formatter&lt;/code&gt;，推荐 &lt;a href=&quot;https://github.com/google/yapf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yapf&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/google/yapf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;记得修改下&lt;code&gt;Atom&lt;/code&gt;插件&lt;code&gt;atom-beautify&lt;/code&gt;中&lt;code&gt;Python&lt;/code&gt;的默认&lt;code&gt;Formatter&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;在编辑器中运行脚本&quot;&gt;&lt;a href=&quot;#在编辑器中运行脚本&quot; class=&quot;headerlink&quot; title=&quot;在编辑器中运行脚本&quot;&gt;&lt;/a&gt;在编辑器中运行脚本&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rgbkrk/atom-script&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这个插件还能运行很多其他脚本语言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apm install script&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Linter&quot;&gt;&lt;a href=&quot;#Linter&quot; class=&quot;headerlink&quot; title=&quot;Linter&quot;&gt;&lt;/a&gt;Linter&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom-community/linter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AtomLinter/linter-flake8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linter-flake8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先用&lt;code&gt;pip&lt;/code&gt;安装 &lt;a href=&quot;https://pypi.python.org/pypi/flake8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flake8&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install flake8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install flake8-docstrings &lt;span class=&quot;comment&quot;&gt;# 可选的 docstrings 支持&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后在&lt;code&gt;Atom&lt;/code&gt;中安装&lt;code&gt;linter&lt;/code&gt;插件：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apm install linter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apm install linter-flake8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自动补全&quot;&gt;&lt;a href=&quot;#自动补全&quot; class=&quot;headerlink&quot; title=&quot;自动补全&quot;&gt;&lt;/a&gt;自动补全&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sadovnychyi/autocomplete-pyt
    
    </summary>
    
      <category term="技术" scheme="http://kaisery.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Atom" scheme="http://kaisery.github.io/tags/Atom/"/>
    
      <category term="Python" scheme="http://kaisery.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>学习 Spark ML：朴素贝叶斯与数据分类</title>
    <link href="http://kaisery.github.io/2016/01/25/%E5%AD%A6%E4%B9%A0%20Spark%20ML%EF%BC%9A%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%88%86%E7%B1%BB/"/>
    <id>http://kaisery.github.io/2016/01/25/学习 Spark ML：朴素贝叶斯与数据分类/</id>
    <published>2016-01-25T22:41:34.000Z</published>
    <updated>2016-04-05T14:53:25.186Z</updated>
    
    <content type="html">&lt;p&gt;这里的数据分类，是指给出一个字符串格式的数据，需要判断它是一个数字、日期、IP 地址等等，还是只是普通的文本，这样一个问题。本来这类问题有正则表达式这样的传统且有效的解决方案。不过实践过程中会发现，有时正则表达式的效率会有问题：特别是数据的类别很多的时候，最坏的情况可能会把所有的正则表达式都跑一边；即使采用多级正则匹配也会有严重影响相应时间的时候。&lt;/p&gt;
&lt;p&gt;解决方案？简单的说还木有发现。不过本文在这里提供一个采用机器学习分类算法的数据分类实践，希望能起到抛砖引玉的作用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你觉得 show me the code 更给力的话，本文使用的项目代码：&lt;a href=&quot;https://github.com/KaiserY/learn-spark-ml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/KaiserY/learn-spark-ml&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;选型&quot;&gt;&lt;a href=&quot;#选型&quot; class=&quot;headerlink&quot; title=&quot;选型&quot;&gt;&lt;/a&gt;选型&lt;/h2&gt;&lt;p&gt;首先我们要解决的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽可能准确的识别数据的分类&lt;/li&gt;
&lt;li&gt;同时能满足实时性要求（尽可能快且时间尽可能恒定）&lt;/li&gt;
&lt;li&gt;同时支持尽可能多的数据类别&lt;/li&gt;
&lt;li&gt;能提供 REST 接口，方便以微服务的形式与现有系统集成&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里我们选择了 Spark 的机器学习库 MLlib。算法则是经典的朴素贝叶斯（multinomial naive Bayes）。理由如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然朴素贝叶斯是个简单的算法，但实践中它的准确性却异常的好，足见统计规律的强大&lt;/li&gt;
&lt;li&gt;Spark 作为分布式内存计算框架，能提供一定的实时计算能力；同时朴素贝叶斯在分类算法中也算是灰常快的了，并且时间恒定&lt;/li&gt;
&lt;li&gt;朴素贝叶斯支持非线性（多类别）分类&lt;/li&gt;
&lt;li&gt;Spark + Spray 可以轻松提供 REST 服务。这里甚至有现成的轮子 &lt;a href=&quot;https://prediction.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PredictionIO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h2&gt;&lt;p&gt;因为 Spark 采用 Scala 编写，这里也采用 Scala 作为编程语言。&lt;/p&gt;
&lt;h3 id=&quot;数据类别&quot;&gt;&lt;a href=&quot;#数据类别&quot; class=&quot;headerlink&quot; title=&quot;数据类别&quot;&gt;&lt;/a&gt;数据类别&lt;/h3&gt;&lt;p&gt;以下是我们此次要识别的数据类别的枚举：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataType&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Enumeration&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TEXT&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;INTEGER&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;integer&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DOUBLE&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;double&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;EMAIL&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;email&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;FAKE_EMAIL&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fake email&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;POST_CODE&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;post code&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;IP_V4&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;ipv4&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;FAKE_IP_V4&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fake ipv4&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;UUID&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;uuid&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DATE&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;date&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TIME&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关于&lt;code&gt;EMAIL&lt;/code&gt;和&lt;code&gt;FAKE_EMAIL&lt;/code&gt;：实践发现，朴素贝叶斯算法在分类特征明显的情况下准确率会大大提高。区分真邮箱与假邮箱是为了尽可能不把类似&lt;code&gt;abcd3f@12d&lt;/code&gt;这样的并不是真正的邮箱的数据错分为邮箱。&lt;/p&gt;
&lt;h3 id=&quot;训练数据&quot;&gt;&lt;a href=&quot;#训练数据&quot; class=&quot;headerlink&quot; title=&quot;训练数据&quot;&gt;&lt;/a&gt;训练数据&lt;/h3&gt;&lt;p&gt;这里我们随机生成了大部分训练数据，像邮编、Email之类的则从文件读取。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataWithLabel&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;label: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;, content: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataTypeSeq&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; sampleCount = &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;integerSeq&lt;/span&gt;&lt;/span&gt;(): &lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;.fill(sampleCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; label = &lt;span class=&quot;type&quot;&gt;DataType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;INTEGER&lt;/span&gt;.id.toDouble&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; content = scala.util.&lt;span class=&quot;type&quot;&gt;Random&lt;/span&gt;.nextInt().toString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;(label, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;emailSeq&lt;/span&gt;&lt;/span&gt;(): &lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Source&lt;/span&gt;.fromInputStream(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.getClass.getResourceAsStream(&lt;span class=&quot;string&quot;&gt;&quot;/email.csv&quot;&lt;/span&gt;)).getLines().map(line =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; label = &lt;span class=&quot;type&quot;&gt;DataType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;EMAIL&lt;/span&gt;.id.toDouble&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; content = line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;(label, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;).toSeq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timeSeq_1&lt;/span&gt;&lt;/span&gt;(): &lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;.fill(sampleCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; label = &lt;span class=&quot;type&quot;&gt;DataType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;TIME&lt;/span&gt;.id.toDouble&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; content = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;LocalTime&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scala.util.&lt;span class=&quot;type&quot;&gt;Random&lt;/span&gt;.nextInt(&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scala.util.&lt;span class=&quot;type&quot;&gt;Random&lt;/span&gt;.nextInt(&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scala.util.&lt;span class=&quot;type&quot;&gt;Random&lt;/span&gt;.nextInt(&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ).toString(&lt;span class=&quot;string&quot;&gt;&quot;hh时mm分ss秒&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;(label, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后我们我们生成&lt;code&gt;RDD&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataTypeRDD&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeRDD&lt;/span&gt;&lt;/span&gt;(sparkContext: &lt;span class=&quot;type&quot;&gt;SparkContext&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; integerRDD = sparkContext.parallelize(&lt;span class=&quot;type&quot;&gt;DataTypeSeq&lt;/span&gt;.integerSeq())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; timeRDD_1 = sparkContext.parallelize(&lt;span class=&quot;type&quot;&gt;DataTypeSeq&lt;/span&gt;.timeSeq_1())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sparkContext.emptyRDD[&lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .union(integerRDD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .union(timeRDD_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Spark 1.6.0 之后提供了 Dataset API。不过支持程度不够完善，并不能对集合或自定义类型自动生成&lt;code&gt;encoder&lt;/code&gt;，使用效果并没有&lt;code&gt;RDD&lt;/code&gt;好，不过我们可以尝试一下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataTypeDataset&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeDataset&lt;/span&gt;&lt;/span&gt;(sqlContext: &lt;span class=&quot;type&quot;&gt;SQLContext&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Dataset&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;DataWithLabel&lt;/span&gt;] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sqlContext.implicits._&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; integerDataset = sqlContext.createDataset(&lt;span class=&quot;type&quot;&gt;DataTypeSeq&lt;/span&gt;.integerSeq())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; timeDataset_1 = sqlContext.createDataset(&lt;span class=&quot;type&quot;&gt;DataTypeSeq&lt;/span&gt;.timeSeq_1())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    integerDataset&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .union(integerDataset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .union(timeDataset_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成最终的&lt;code&gt;DataFrame&lt;/code&gt;。这里我们用&lt;code&gt;75%&lt;/code&gt;的样本数据进行训练，&lt;code&gt;25%&lt;/code&gt;的数据用于测试。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; sparkConf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SparkConf&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .setAppName(&lt;span class=&quot;string&quot;&gt;&quot;Data Type Training&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .setMaster(&lt;span class=&quot;string&quot;&gt;&quot;local&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; sparkContext = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SparkContext&lt;/span&gt;(sparkConf)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; sqlContext = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SQLContext&lt;/span&gt;(sparkContext)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Dataset API&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    val trainingDataset = DataTypeDataset.makeDataset(sqlContext)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    val dataFrame = trainingDataset.toDF().map(r =&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      (r.getDouble(0), r.getString(1), Util.string2Vector(r.getString(1), 100))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    &amp;#125;).toDF(&quot;label&quot;, &quot;content&quot;, &quot;features&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; trainingRDD = &lt;span class=&quot;type&quot;&gt;DataTypeRDD&lt;/span&gt;.makeRDD(sparkContext)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; dataFrame = sqlContext.createDataFrame(trainingRDD.map(d =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (d.label, d.content, &lt;span class=&quot;type&quot;&gt;Util&lt;/span&gt;.string2Vector(d.content, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)).toDF(&lt;span class=&quot;string&quot;&gt;&quot;label&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;features&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; splitsDataFrame = dataFrame.randomSplit(&lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.75&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; trainingDataFrame = splitsDataFrame(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; testDataFrame = splitsDataFrame(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;特征抽取&quot;&gt;&lt;a href=&quot;#特征抽取&quot; class=&quot;headerlink&quot; title=&quot;特征抽取&quot;&gt;&lt;/a&gt;特征抽取&lt;/h2&gt;&lt;p&gt;特征抽取函数如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Util&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;string2Vector&lt;/span&gt;&lt;/span&gt;(text: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;, maxLength: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; limit = &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (text.length &amp;gt; maxLength) maxLength &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; text.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; maxCount = maxLength + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; unicodePostionFeatureCount = &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * maxLength&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; unicodeNumberFeatureCount = &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.maxId * maxCount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; featureIndex, alphabet, number, dot, minus, at, colon = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; featuresMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; mutable.&lt;span class=&quot;type&quot;&gt;HashMap&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; featureText = text.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, limit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featureText.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;Unicode&quot;&lt;/span&gt;).drop(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).foreach(byte =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; value = byte &amp;amp; &lt;span class=&quot;number&quot;&gt;0xFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; index = featureIndex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      featureIndex += &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      featuresMap += index + value -&amp;gt; &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featureText.foreach(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; char &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &#39;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39; until &#39;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&#39; contains char =&amp;gt; number += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; char &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &#39;a&#39; until &#39;z&#39; contains char =&amp;gt; alphabet += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; char &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &#39;&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;&#39; until &#39;&lt;span class=&quot;type&quot;&gt;Z&lt;/span&gt;&#39; contains char =&amp;gt; alphabet += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &#39;.&#39; =&amp;gt; dot += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &#39;-&#39; =&amp;gt; minus += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &#39;@&#39; =&amp;gt; at += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &#39;:&#39; =&amp;gt; colon += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; _ =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featureIndex = unicodePostionFeatureCount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featuresMap += featureIndex + &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;NUMBER&lt;/span&gt;.id * maxCount + number -&amp;gt; &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featuresMap += featureIndex + &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;ALPHABET&lt;/span&gt;.id * maxCount + alphabet -&amp;gt; &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featuresMap += featureIndex + &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;DOT&lt;/span&gt;.id * maxCount + dot -&amp;gt; &lt;span class=&quot;number&quot;&gt;20.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featuresMap += featureIndex + &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;MINUS&lt;/span&gt;.id * maxCount + minus -&amp;gt; &lt;span class=&quot;number&quot;&gt;20.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featuresMap += featureIndex + &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;AT&lt;/span&gt;.id * maxCount + at -&amp;gt; &lt;span class=&quot;number&quot;&gt;20.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featuresMap += featureIndex + &lt;span class=&quot;type&quot;&gt;Features&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;COLON&lt;/span&gt;.id * maxCount + colon -&amp;gt; &lt;span class=&quot;number&quot;&gt;20.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Vectors&lt;/span&gt;.sparse(unicodePostionFeatureCount + unicodeNumberFeatureCount, featuresMap.toSeq)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原理：我们首先取字符串数据的前 N 个字符，将其转化为 Unicode 字节数组（因为 Java 字符串转 Unicode 会带有 BOM，所以我们去掉头两个字节）。然后对应每个字节的值（&lt;code&gt;0&lt;/code&gt;~&lt;code&gt;255&lt;/code&gt;）给对应的特征赋值（这里我们根据实践选择赋值为&lt;code&gt;5.0&lt;/code&gt;，可自行调整）。这样总共会有&lt;code&gt;N * 2 * 256&lt;/code&gt;个特征向量。这样抽取特征有个缺点：Overfitting，因为现实中不同的字符提供的特征并不相同，这样对所有字符一视同仁会造成很大的噪音。为了解决这个问题，我们在语义层次加入了部分高权值的特征来平衡：对像字母，数字，加号，分号等有特殊意义的字符给予高于普通字符权值的特征。鉴于朴素贝叶斯算法对稀疏特征向量的支持良好，所以这个模型时可行的。&lt;/p&gt;
&lt;h2 id=&quot;训练与测试&quot;&gt;&lt;a href=&quot;#训练与测试&quot; class=&quot;headerlink&quot; title=&quot;训练与测试&quot;&gt;&lt;/a&gt;训练与测试&lt;/h2&gt;&lt;p&gt;这里我们使用了 Spark MLlib 的 PipeLine。它对 Spark 的各种机器学习算法进行了抽象，统一了接口（&lt;code&gt;DataFrame&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;这是我们使用 PipeLine 生成 Model 的函数：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;train&lt;/span&gt;&lt;/span&gt;(trainingDataFrame: &lt;span class=&quot;type&quot;&gt;DataFrame&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;PipelineModel&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; naiveBayes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NaiveBayes&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setSmoothing(&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setModelType(&lt;span class=&quot;string&quot;&gt;&quot;multinomial&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setLabelCol(&lt;span class=&quot;string&quot;&gt;&quot;label&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setFeaturesCol(&lt;span class=&quot;string&quot;&gt;&quot;features&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; pipeline = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Pipeline&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .setStages(&lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(naiveBayes))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pipeline.fit(trainingDataFrame)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是我们的测试函数：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// test(testDataFrame)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;/span&gt;(testDataFrame: &lt;span class=&quot;type&quot;&gt;DataFrame&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Unit&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; predictions = model.transform(testDataFrame)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; multiclassClassificationEvaluator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MulticlassClassificationEvaluator&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setLabelCol(&lt;span class=&quot;string&quot;&gt;&quot;label&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setPredictionCol(&lt;span class=&quot;string&quot;&gt;&quot;prediction&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .setMetricName(&lt;span class=&quot;string&quot;&gt;&quot;precision&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; accuracy = multiclassClassificationEvaluator.evaluate(predictions)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; predictionAndLabel = predictions.select(&lt;span class=&quot;string&quot;&gt;&quot;prediction&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;label&quot;&lt;/span&gt;).map(r =&amp;gt; (r.getDouble(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), r.getDouble(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; metrics = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MulticlassMetrics&lt;/span&gt;(predictionAndLabel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; stringBuilder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; scala.collection.mutable.&lt;span class=&quot;type&quot;&gt;StringBuilder&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stringBuilder.append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stringBuilder.append(accuracy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stringBuilder.append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stringBuilder.append(metrics.confusionMatrix.toString(&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stringBuilder.append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;DataType&lt;/span&gt;.values.foreach(t =&amp;gt; stringBuilder.append(t.toString.padTo(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;).mkString + &lt;span class=&quot;string&quot;&gt;&quot;--&amp;gt;\t&quot;&lt;/span&gt; + metrics.precision(t.id.toDouble) + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stringBuilder.append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  println(stringBuilder)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们输出了总体的准确率，混淆矩阵和各数据类别的准确率：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0.9997833100592286&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7485.0  9.0     0.0     0.0     0.0      0.0    0.0     0.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     7512.0  0.0     0.0     0.0      0.0    0.0     0.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     9937.0  0.0     0.0      0.0    0.0     0.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     9935.0  2.0      0.0    0.0     0.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     0.0     12630.0  0.0    0.0     0.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     1.0     0.0     0.0     0.0      657.0  0.0     0.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     0.0     0.0      0.0    9983.0  5.0     0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     0.0     0.0      0.0    1.0     5038.0  0.0     0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     0.0     0.0      0.0    0.0     0.0     9970.0  0.0     0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     0.0     0.0      0.0    0.0     0.0     0.0     4996.0  0.0     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0     0.0     0.0     0.0     0.0      0.0    0.0     0.0     0.0     0.0     4907.0  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text                --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;integer             --&amp;gt;	0.9986705663387397&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;double              --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;email               --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fake email          --&amp;gt;	0.9998416719442685&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;post code           --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ipv4                --&amp;gt;	0.9998998397435898&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fake ipv4           --&amp;gt;	0.9990085266706326&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uuid                --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date                --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time                --&amp;gt;	1.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;从上面的测试输出可以看出总体准确率还是不错的，不过在文本与整数，真邮箱与假邮箱和真 IP 与 假 IP 上的识别还存在问题。用个例测试的结论也是如此，究其原因应该是这几个分类的特征仍然没有很好的区分开。&lt;/p&gt;
&lt;p&gt;在我们的机器上（i5，8G 内存）上的测试时间约为 1 分钟。并且目前 Spark 已支持将 Pipeline 保存到文件中。理论上应该能够进行实时计算。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里的数据分类，是指给出一个字符串格式的数据，需要判断它是一个数字、日期、IP 地址等等，还是只是普通的文本，这样一个问题。本来这类问题有正则表达式这样的传统且有效的解决方案。不过实践过程中会发现，有时正则表达式的效率会有问题：特别是数据的类别很多的时候，最坏的情况可能会把
    
    </summary>
    
      <category term="技术" scheme="http://kaisery.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Spark" scheme="http://kaisery.github.io/tags/Spark/"/>
    
      <category term="机器学习" scheme="http://kaisery.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="朴素贝叶斯" scheme="http://kaisery.github.io/tags/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
    
  </entry>
  
  <entry>
    <title>利用 Cloud 9 制作 GitBook 电子书</title>
    <link href="http://kaisery.github.io/2016/01/22/%E5%88%A9%E7%94%A8%20Cloud%209%20%E5%88%B6%E4%BD%9C%20GitBook%20%E7%94%B5%E5%AD%90%E4%B9%A6/"/>
    <id>http://kaisery.github.io/2016/01/22/利用 Cloud 9 制作 GitBook 电子书/</id>
    <published>2016-01-22T13:00:27.000Z</published>
    <updated>2016-04-05T14:53:25.186Z</updated>
    
    <content type="html">&lt;p&gt;想用 GitBook 制作电子书而苦于没有环境？&lt;br&gt;&lt;br&gt; Windows 太坑？&lt;br&gt;&lt;br&gt; Linux 懒得装？&lt;br&gt;&lt;br&gt; Docker？这是什么能吃吗？&lt;/p&gt;
&lt;p&gt;这里给大家提供一个利用 Cloud 9 IDE 生成 GitBook 电子书的教程。（其实也没有什么好教的，这货就是 Docker + Linux）&lt;/p&gt;
&lt;h2 id=&quot;创建-Cloud-9-workspace&quot;&gt;&lt;a href=&quot;#创建-Cloud-9-workspace&quot; class=&quot;headerlink&quot; title=&quot;创建 Cloud 9 workspace&quot;&gt;&lt;/a&gt;创建 Cloud 9 workspace&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;template 记得选 Node.js。它自带 nvm，这样就不用装 node 了。&lt;/li&gt;
&lt;li&gt;如果你使用 Git 的话也可以直接写上，它会自动帮你 Clone。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置-GitBook-环境&quot;&gt;&lt;a href=&quot;#配置-GitBook-环境&quot; class=&quot;headerlink&quot; title=&quot;配置 GitBook 环境&quot;&gt;&lt;/a&gt;配置 GitBook 环境&lt;/h2&gt;&lt;h3 id=&quot;安装-calibre&quot;&gt;&lt;a href=&quot;#安装-calibre&quot; class=&quot;headerlink&quot; title=&quot;安装 calibre&quot;&gt;&lt;/a&gt;安装 calibre&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo -v &amp;amp;&amp;amp; wget -nv -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py | sudo python -c &amp;quot;import sys; main=lambda:sys.stderr.write(&amp;apos;Download failed\n&amp;apos;); exec(sys.stdin.read()); main()&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装中文字体&quot;&gt;&lt;a href=&quot;#安装中文字体&quot; class=&quot;headerlink&quot; title=&quot;安装中文字体&quot;&gt;&lt;/a&gt;安装中文字体&lt;/h3&gt;&lt;p&gt;Cloud 9 的系统默认木有中文字体的样子，这里我们安装一个文泉驿微黑&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实践发现不同字体对最终生成的 pdf 文件大小有影响，如果你发现生成的 pdf 过大，尝试换个字体看看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ttf-wqy-microhei&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装-GitBook-amp-生成电子书&quot;&gt;&lt;a href=&quot;#安装-GitBook-amp-生成电子书&quot; class=&quot;headerlink&quot; title=&quot;安装 GitBook &amp;amp; 生成电子书&quot;&gt;&lt;/a&gt;安装 GitBook &amp;amp; 生成电子书&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;https://github.com/GitbookIO/gitbook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gitbook&lt;/a&gt; 中的操作&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;想用 GitBook 制作电子书而苦于没有环境？&lt;br&gt;&lt;br&gt; Windows 太坑？&lt;br&gt;&lt;br&gt; Linux 懒得装？&lt;br&gt;&lt;br&gt; Docker？这是什么能吃吗？&lt;/p&gt;
&lt;p&gt;这里给大家提供一个利用 Cloud 9 IDE 生成 GitBook 电子书的教程。
    
    </summary>
    
      <category term="技术" scheme="http://kaisery.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Cloud 9" scheme="http://kaisery.github.io/tags/Cloud-9/"/>
    
      <category term="GitBook" scheme="http://kaisery.github.io/tags/GitBook/"/>
    
  </entry>
  
  <entry>
    <title>2016 年的书单</title>
    <link href="http://kaisery.github.io/2016/01/13/2016%20%E5%B9%B4%E7%9A%84%E4%B9%A6%E5%8D%95/"/>
    <id>http://kaisery.github.io/2016/01/13/2016 年的书单/</id>
    <published>2016-01-13T23:53:09.000Z</published>
    <updated>2016-04-05T14:53:25.186Z</updated>
    
    <content type="html">&lt;p&gt;喜闻乐见的 100 本书系列&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt;  代议制政府（约翰·密尔）&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt;  法律、立法与自由（哈耶克）&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt;  心理学改变生活（卡伦·达菲）&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot;&gt;          Learning Python, 5th Edition(Mark Lutz)&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt;  Programming Scala, 2nd Edition(Dean Wampler, Alex Payne)&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot;&gt;          Elasticsearch in Action(Radu Gheorghe, Matthew Lee Hinman, and Roy Russo)&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt;  政治经济学原理（约翰·斯图亚特·穆勒）&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot;&gt;          人口原理（托马斯·罗伯特·马尔萨斯 ）&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;喜闻乐见的 100 本书系列&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt;  代议制政府（约翰·密尔）&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; onclick
    
    </summary>
    
      <category term="阅读" scheme="http://kaisery.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="书" scheme="http://kaisery.github.io/tags/%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>各种软件的代理姿势</title>
    <link href="http://kaisery.github.io/2016/01/11/%E5%90%84%E7%A7%8D%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BB%A3%E7%90%86%E5%A7%BF%E5%8A%BF/"/>
    <id>http://kaisery.github.io/2016/01/11/各种软件的代理姿势/</id>
    <published>2016-01-11T11:20:59.000Z</published>
    <updated>2016-01-13T15:03:20.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;首先你得有一个代理，例如: &lt;code&gt;http://127.0.0.1:8087&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; title=&quot;Node.js&quot;&gt;&lt;/a&gt;Node.js&lt;/h2&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; proxy &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;https&lt;/span&gt;-proxy &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; strict-ssl &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; registry &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://registry.npmjs.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;node-gyp&quot;&gt;&lt;a href=&quot;#node-gyp&quot; class=&quot;headerlink&quot; title=&quot;node-gyp&quot;&gt;&lt;/a&gt;node-gyp&lt;/h3&gt;&lt;p&gt;设置环境变量&lt;code&gt;NODE_TLS_REJECT_UNAUTHORIZED&lt;/code&gt;为&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Atom&quot;&gt;&lt;a href=&quot;#Atom&quot; class=&quot;headerlink&quot; title=&quot;Atom&quot;&gt;&lt;/a&gt;Atom&lt;/h2&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; proxy &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;https&lt;/span&gt;-proxy &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; strict-ssl &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首次安装后，可能需要设置环境变量&lt;code&gt;ATOM_NODE_URL&lt;/code&gt;为&lt;code&gt;http://gh-contractor-zcbenz.s3.amazonaws.com/atom-shell/dist&lt;/code&gt;来安装 Compiler。如果搜索 package 报错，记得删除此环境变量。&lt;/p&gt;
&lt;h2 id=&quot;pip&quot;&gt;&lt;a href=&quot;#pip&quot; class=&quot;headerlink&quot; title=&quot;pip&quot;&gt;&lt;/a&gt;pip&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--proxy http://127.0.0.1:8087 --trusted-host pypi.python.org XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--index-url=http://pypi.python.org/simple/ --trusted-host pypi.python.org XXX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;git&quot;&gt;&lt;a href=&quot;#git&quot; class=&quot;headerlink&quot; title=&quot;git&quot;&gt;&lt;/a&gt;git&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global http&lt;span class=&quot;selector-class&quot;&gt;.proxy&lt;/span&gt; http:&lt;span class=&quot;comment&quot;&gt;//127.0.0.1:8087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global https&lt;span class=&quot;selector-class&quot;&gt;.proxy&lt;/span&gt; http:&lt;span class=&quot;comment&quot;&gt;//127.0.0.1:8087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global http&lt;span class=&quot;selector-class&quot;&gt;.sslVerify&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;大部分-Linux-软件&quot;&gt;&lt;a href=&quot;#大部分-Linux-软件&quot; class=&quot;headerlink&quot; title=&quot;大部分 Linux 软件&quot;&gt;&lt;/a&gt;大部分 Linux 软件&lt;/h2&gt;&lt;p&gt;环境变量&lt;code&gt;http_proxy=http://127.0.0.1:8087&lt;/code&gt;和&lt;code&gt;https_proxy=http://127.0.0.1:8087&lt;/code&gt;足矣。不好使请查阅软件的代理设置&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先你得有一个代理，例如: &lt;code&gt;http://127.0.0.1:8087&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="技术" scheme="http://kaisery.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="代理" scheme="http://kaisery.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://kaisery.github.io/2015/12/21/hello-world/"/>
    <id>http://kaisery.github.io/2015/12/21/hello-world/</id>
    <published>2015-12-21T00:00:00.000Z</published>
    <updated>2016-04-05T14:53:25.186Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io
    
    </summary>
    
    
  </entry>
  
</feed>
